{"ast":null,"code":"import _slicedToArray from\"C:/Users/himan/OneDrive/Desktop/Paydeer/React/first-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';import React,{useState}from'react';import About from'./components/About';import Navbar from'./components/Navbar';import TextForm from'./components/TextForm';import Alert from'./components/Alert';import{BrowserRouter as Router,Route,Switch}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),alert=_useState2[0],setAlert=_useState2[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var _useState3=useState('light'),_useState4=_slicedToArray(_useState3,2),mode=_useState4[0],setMode=_useState4[1];//Whether dark mode is enabled or not\nvar toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='black';showAlert('Dark mode is enabled','success');// document.title = 'TextUtils - Dark mode'\n}else{setMode('light');document.body.style.backgroundColor='white';showAlert('Light mode is enabled','success');// document.title = 'TextUtils - Light mode'\n}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",aboutText:\"About Us \",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-4\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",children:/*#__PURE__*/_jsx(About,{mode:mode})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"TextUtils - Word Counter, Character Counter, Remove extra spaces.\",showAlert:showAlert,mode:mode})})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","About","Navbar","TextForm","Alert","BrowserRouter","Router","Route","Switch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_useState","_useState2","_slicedToArray","alert","setAlert","showAlert","message","type","msg","setTimeout","_useState3","_useState4","mode","setMode","toggleMode","document","body","style","backgroundColor","children","title","aboutText","className","exact","path","heading"],"sources":["C:/Users/himan/OneDrive/Desktop/Paydeer/React/first-app/src/App.js"],"sourcesContent":["\r\nimport './App.css';\r\nimport React, { useState } from 'react';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport Alert from './components/Alert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 1500);\r\n  }\r\n\r\n  const [mode, setMode] = useState('light'); //Whether dark mode is enabled or not\r\n\r\n  const toggleMode = () => {\r\n    if (mode === 'light') {\r\n      setMode('dark')\r\n      document.body.style.backgroundColor = 'black';\r\n      showAlert('Dark mode is enabled', 'success')\r\n      // document.title = 'TextUtils - Dark mode'\r\n    }\r\n    else {\r\n      setMode('light')\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert('Light mode is enabled', 'success')\r\n      // document.title = 'TextUtils - Light mode'\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar title=\"TextUtils\" aboutText=\"About Us \" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <div className=\"container my-4\">\r\n          <Switch>\r\n            <Route exact path='/about'>\r\n              <About mode={mode} />\r\n            </Route>\r\n            <Route path='/'>\r\n              <TextForm heading=\"TextUtils - Word Counter, Character Counter, Remove extra spaces.\" showAlert={showAlert} mode={mode} />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"6IACA,MAAO,WAAW,CAClB,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,KAAK,CACLC,MAAM,KACD,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAG1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAA0BhB,QAAQ,CAAC,IAAI,CAAC,CAAAiB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAEtB,GAAM,CAAAI,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,IAAAM,UAAA,CAAwB1B,QAAQ,CAAC,OAAO,CAAC,CAAA2B,UAAA,CAAAT,cAAA,CAAAQ,UAAA,IAAlCE,IAAI,CAAAD,UAAA,IAAEE,OAAO,CAAAF,UAAA,IAAuB;AAE3C,GAAM,CAAAG,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAIF,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7Cb,SAAS,CAAC,sBAAsB,CAAE,SAAS,CAAC,CAC5C;AACF,CAAC,IACI,CACHQ,OAAO,CAAC,OAAO,CAAC,CAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7Cb,SAAS,CAAC,uBAAuB,CAAE,SAAS,CAAC,CAC7C;AACF,CACF,CAAC,CACD,mBACEX,IAAA,CAAAI,SAAA,EAAAqB,QAAA,cACEvB,KAAA,CAACN,MAAM,EAAA6B,QAAA,eACLzB,IAAA,CAACR,MAAM,EAACkC,KAAK,CAAC,WAAW,CAACC,SAAS,CAAC,WAAW,CAACT,IAAI,CAAEA,IAAK,CAACE,UAAU,CAAEA,UAAW,EAAG,cACtFpB,IAAA,CAACN,KAAK,EAACe,KAAK,CAAEA,KAAM,EAAG,cACvBT,IAAA,QAAK4B,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAC7BvB,KAAA,CAACJ,MAAM,EAAA2B,QAAA,eACLzB,IAAA,CAACH,KAAK,EAACgC,KAAK,MAACC,IAAI,CAAC,QAAQ,CAAAL,QAAA,cACxBzB,IAAA,CAACT,KAAK,EAAC2B,IAAI,CAAEA,IAAK,EAAG,EACf,cACRlB,IAAA,CAACH,KAAK,EAACiC,IAAI,CAAC,GAAG,CAAAL,QAAA,cACbzB,IAAA,CAACP,QAAQ,EAACsC,OAAO,CAAC,mEAAmE,CAACpB,SAAS,CAAEA,SAAU,CAACO,IAAI,CAAEA,IAAK,EAAG,EACpH,GACD,EACL,GACC,EAGR,CAEP,CACA,cAAe,CAAAb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}